
# Always use absolute path!!! 

#TODO: Change this on single core machine 
# number of worker === number of cpu on the system
worker_processes  2; 

# tell each worker which cpu to use; 
# worker 1 will use 1st cpu, worker 2 will use 2nd cpu
worker_cpu_affinity 10 01;

working_directory /Users/TheFruit/nginx/nginx_worker_dir;

worker_rlimit_core 100m; 
worker_rlimit_nofile 10000; 

# lower is higher; don't set below -4, since -5 is kernel processes
worker_priority -2; 

error_log /Users/TheFruit/nginx/nginx_log/error_log/error.log;

events {
    accept_mutex on; 
    accept_mutex_delay 350ms;

    # kqueue is for BSD based system such as Apple OS X. 
    # use select # for windows
    # use poll # better than select, check whether your system has it 
    # use epoll # linux 2.6+ (any modern Linux have it) 
    # use /dev/poll # Solaris based system 
    # if you not sure just let nginx decide aka delete the settings
    use kqueue;

    multi_accept on;

    # number of connection a worker can handle at once 
    worker_connections  128;

    # tell error_log to create detailed report about connection from 
    # this IP. Must rebuid nginx with --with-debug
    # debug_connection 127.0.0.1;
}


http {

    include       mime.types;

    # application/octet-stream will tell the browser to download the 
    # file if no matchine mime.types
    default_type  application/octet-stream;

    keepalive_timeout 65; 
    client_body_buffer_size 2048K;

    # increase it inside location directive that serve large file upload
    client_max_body_size 100M;
    client_header_buffer_size 2048K;

    limit_rate 128K;
    limit_rate_after 5m;

    sendfile        on;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /Users/TheFruit/nginx/nginx_log/access_log/access.log 
                main;

    gzip  on;

    # fastcgi server load balancing, add your php-fpm server here
    upstream fastcgi_ustream {
        server 127.0.0.1:9000;
    }

    server {
        listen 8080;
        server_name localhost; 

        set $project_dir 
            /Users/TheFruit/Project/rtu-power-monitoring-prototype;
        set $error_dir /Backend/Error;
        set $php_dir /Backend/App; 
        
        error_page 404 $error_dir/not_found.html;
        error_page 500 501 502 503 504 $error_dir/server_error.html; 

        root $project_dir;

        # to handle EXT-GWT paging request
        if ($request_uri ~ limit=([0-9]+)){
            set $limit $1;
            rewrite ^/get/paging-grid 
                http://localhost:8080/index.php/test/paging/$limit?;
        }

        # pass the PHP request to FastCGI PHP-FPM server pools
        location ~* \.php/.*$ {
            # To avoid backdoor attack
            if ($uri ~ \..*/.*.php) {
                return 404; 
            }
            fastcgi_pass fastcgi_ustream; 
            fastcgi_index index.php; 
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_param SCRIPT_FILENAME 
                $document_root$php_dir$fastcgi_script_name;

            include fastcgi_params;
        }
    }
}
